 
 
def docker_image(name:str, dockerfile:str, files:list=[], deps:list=[], visibility=None, out:str=None):
    
    tag = "%s:latest"%(name)
    log.info("Building docker image for %s" % tag)
    log.info("deps are")
    log.info(deps)
    output = "%s.log" %(tag)
    cmds = ['echo pwd is ',
            'pwd',
            'mkdir _tmp']
    for file in files:
        log.info("Adding")
        log.info(file)
        cmds.append('echo $(location %s)' % file)
    
    cmd = ' && '.join(cmds)
    build_rule(
        name = name,
        cmd = cmd,
        building_description='building docker_image...',
        outs=[output],
        output_is_complete=True,
        visibility = visibility
    )


def get_build_command(dockerfile, tag, output):
    log.info("build set of commands to build docker image")
    cmd = ' && '.join([
        'echo $PKG',
        'echo $PKG_DIR',
        'echo $TMP_DIR',
        'echo pwd is ',
        'pwd',
        'mkdir pkg',
        'ln -s $PKG_DIR/* pkg',
        'ln -s $TMP_DIR pkg/%s_%s' % (CONFIG.OS, CONFIG.ARCH),
        'docker build --no-cache -t  %s /pkg > %s ' % (tag, output)
    ])


       
